{"version":3,"sources":["logo.svg","Youtube.js","App.js","reportWebVitals.js","index.js"],"names":["query","Youtube","props","state","videoLink","clicked","bind","fetch","then","response","json","map","obj","id","videoId","setState","catch","error","console","this","link","i","className","title","width","height","src","frameBorder","allow","allowFullScreen","embedVideo","onClick","Component","App","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,G,MAAA,IAA0B,kC,2CCKrCA,EAAQ,EAoDGC,E,kDAhDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTC,UAAU,IAEd,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAND,E,sDASR,IAAD,OAMLC,MAFW,iEADXP,GAAO,IAIFQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACH,IAAMN,EAAYM,EAAKC,KAAI,SAAAC,GAAG,MAAI,iCAAiCA,EAAIC,GAAGC,WAC1E,EAAKC,SAAS,CAACX,iBAElBY,OAAM,SAACC,GACRC,QAAQD,MAAMA,Q,+BAQlB,OACA,gCAEQE,KAAKhB,MAAMC,UAAUO,KAAI,SAACS,EAAKC,GAI3B,OAHiB,qBAAaC,UAAU,UAAvB,SACjB,wBAAQC,MAAM,UAAUC,MAAM,MAAMC,OAAO,MAAMC,IAAKN,EAAMO,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,KADjKR,MAMlCF,KAAKW,WAEN,wBAAQC,QAASZ,KAAKd,QAAtB,oC,GA5CU2B,aCgBPC,MAlBf,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKI,IAAKQ,EAAMZ,UAAU,WAAWa,IAAI,SACzC,mBACEb,UAAU,WACVc,KAAK,sBACLC,OAAO,SACPC,IAAI,2BAIR,cAAC,EAAD,QCNSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1924588b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\n\r\n/*My cat video API does not require any keys to access it, but it does contain routes to slice. \r\nSince we want to control how many cat videos load at a time, we must create a query var for route \r\n?_start=0&_end=query. If you would like to access all videos, delete the route from the link*/\r\nvar query = 0;\r\n\r\nclass Youtube extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            videoLink:[]\r\n        };\r\n        this.clicked = this.clicked.bind(this);\r\n    }\r\n\r\n    clicked(){\r\n        /*On every click, we and the number of cat videos to increment by 5. We do this by incrementing the \r\n        video query by 5 for each click. Then we fetch from the API and store the data in a state*/\r\n        query+=5;\r\n        var curl = 'https://cat-video-api.herokuapp.com/cat_videos?_start=0&_end='+query;\r\n        \r\n        fetch(curl)\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                const videoLink = json.map(obj => \"https://www.youtube.com/embed/\"+obj.id.videoId);\r\n                this.setState({videoLink});\r\n            })\r\n            .catch((error) => {\r\n            console.error(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        /*The function below will create divs and embed the videos. We must create a button that fetches \r\n        the youtube video information for the function. onClick, we must run the clicked function to \r\n        request from API and save it to this.state.*/ \r\n        return (\r\n        <div>\r\n            {\r\n                this.state.videoLink.map((link,i)=>{\r\n                    var embedVideo = <div key={i} className=\"youtube\"> \r\n                    <iframe title=\"Youtube\" width=\"560\" height=\"315\" src={link} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                    </div>;\r\n                    return embedVideo;\r\n                })\r\n            }\r\n            {this.embedVideo}\r\n\r\n            <button onClick={this.clicked}>Load Cat Videos</button> \r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Youtube;","import logo from './logo.svg';\nimport './App.css';\nimport Youtube from './Youtube';\n\n//React boilerplate\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n        </a>\n      </header>\n      <Youtube/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}